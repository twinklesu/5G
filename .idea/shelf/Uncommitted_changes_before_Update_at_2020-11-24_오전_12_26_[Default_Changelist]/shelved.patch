Index: app/src/main/java/com/example/weather/fragment/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.weather.fragment;\r\n\r\nimport android.Manifest;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.location.Location;\r\nimport android.location.LocationManager;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.provider.ContactsContract;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.TextView;\r\n\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.example.weather.JoinActivity1;\r\nimport com.example.weather.LoginActivity;\r\nimport com.example.weather.PostActivity;\r\nimport com.example.weather.PostViewActivity;\r\nimport com.example.weather.PostWriteActivity;\r\nimport com.example.weather.R;\r\n\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.UnsupportedEncodingException;\r\nimport java.net.URLEncoder;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link HomeFragment#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class HomeFragment extends Fragment {\r\n\r\n    static final String TAG = HomeFragment.class.getSimpleName();\r\n    private View rootView;\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    public HomeFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment HomeFragment.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static HomeFragment newInstance(String param1, String param2) {\r\n        HomeFragment fragment = new HomeFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onActivityCreated(Bundle savedInstanceState) {\r\n        super.onActivityCreated(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n\r\n        Button goToBoard = getActivity().findViewById(R.id.moreButton1);\r\n        goToBoard.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(HomeFragment.this.getContext(), PostWriteActivity.class); // 후에 연결 수정 필요\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        Date date = new Date();\r\n\r\n        LocationManager lm = (LocationManager) getActivity().getSystemService(Context.LOCATION_SERVICE);\r\n        if (ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            String[] PERMISSIONS = {Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION};\r\n            ActivityCompat.requestPermissions(getActivity(), PERMISSIONS, 100);\r\n        }\r\n        Location location = lm.getLastKnownLocation(LocationManager.GPS_PROVIDER);\r\n//        Log.d(TAG, location.toString());\r\n        double longitude = location.getLongitude();\r\n        double latitude = location.getLatitude();\r\n\r\n        Log.d(TAG, \"위치 : \" + longitude + \", \" + latitude);\r\n\r\n        LatXLngY temp = convertGRID_GPS(TO_GRID, latitude, longitude);\r\n\r\n        String apiUrl = \"http://apis.data.go.kr/1360000/VilageFcstInfoService/getVilageFcst\";    //동네예보조회\r\n\r\n        String serviceKey = \"9KSHD5LtoJANsIrfd8%2BHozU%2FSzL7EXty4XBhHas84GDqMsPgSoMXEQkOkMKI9EcOIYX%2FXsT7PxU4lENxllCvoA%3D%3D\";\r\n        String nx = Integer.toString((int) temp.x);    //위도\r\n        String ny = Integer.toString((int) temp.y);    //경도\r\n        String baseDate = SetParameter.setDate(date);    //조회하고싶은 날짜\r\n        String baseTime = SetParameter.setTime(date);    //API 제공 시간\r\n        String dataType = \"JSON\";    //타입 xml, json\r\n        String numOfRows = \"14\";    //한 페이지 결과 수\r\n\r\n        Log.d(TAG, \"nx, ny : \" + nx + \",\" + ny);\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(HomeFragment.this.getActivity());\r\n\r\n        StringBuilder urlBuilder = new StringBuilder(apiUrl);\r\n        try {\r\n            urlBuilder.append(\"?\" + URLEncoder.encode(\"ServiceKey\", \"UTF-8\") + \"=\" + serviceKey);\r\n            urlBuilder.append(\"&\" + URLEncoder.encode(\"nx\", \"UTF-8\") + \"=\" + URLEncoder.encode(nx, \"UTF-8\")); //경도\r\n            urlBuilder.append(\"&\" + URLEncoder.encode(\"ny\", \"UTF-8\") + \"=\" + URLEncoder.encode(ny, \"UTF-8\")); //위도\r\n            urlBuilder.append(\"&\" + URLEncoder.encode(\"dataType\", \"UTF-8\") + \"=\" + URLEncoder.encode(dataType, \"UTF-8\"));    /* 타입 */\r\n            urlBuilder.append(\"&\" + URLEncoder.encode(\"base_date\", \"UTF-8\") + \"=\" + URLEncoder.encode(baseDate, \"UTF-8\")); /* 조회하고싶은 날짜*/\r\n            urlBuilder.append(\"&\" + URLEncoder.encode(\"base_time\", \"UTF-8\") + \"=\" + URLEncoder.encode(baseTime, \"UTF-8\")); /* 조회하고싶은 시간 AM 02시부터 3시간*/\r\n            urlBuilder.append(\"&\" + URLEncoder.encode(\"numOfRows\", \"UTF-8\") + \"=\" + URLEncoder.encode(numOfRows, \"UTF-8\"));    /* 한 페이지 결과 수 */\r\n        } catch (UnsupportedEncodingException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        String url = urlBuilder.toString();\r\n        Log.d(TAG, \"URL : \" + url);\r\n\r\n        JsonObjectRequest jsonArrayRequest = new JsonObjectRequest(Request.Method.GET,\r\n                url, null,\r\n                new Response.Listener<JSONObject>() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        Log.d(TAG, \"Success : \" + response.toString());\r\n                        try {\r\n                            JSONObject result = (JSONObject) response.get(\"result\");\r\n                            JSONObject body = (JSONObject) result.get(\"body\");\r\n                            JSONObject items = (JSONObject) body.get(\"items\");\r\n                            JSONArray item = (JSONArray) items.get(\"item\");\r\n\r\n\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n                }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                error.printStackTrace();\r\n                Log.d(TAG, \"FAIL\");\r\n            }\r\n        }\r\n        );\r\n        queue.add(jsonArrayRequest);\r\n\r\n        setBoardPost();\r\n        setWeather(url);\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        Log.d(TAG, \"onCreateView: \");\r\n        rootView = inflater.inflate(R.layout.fragment_home, container, false);\r\n        return rootView;\r\n    }\r\n\r\n    public static int TO_GRID = 0;\r\n    public static int TO_GPS = 1;\r\n\r\n    private LatXLngY convertGRID_GPS(int mode, double lat_X, double lng_Y) {\r\n        double RE = 6371.00877; // 지구 반경(km)\r\n        double GRID = 5.0; // 격자 간격(km)\r\n        double SLAT1 = 30.0; // 투영 위도1(degree)\r\n        double SLAT2 = 60.0; // 투영 위도2(degree)\r\n        double OLON = 126.0; // 기준점 경도(degree)\r\n        double OLAT = 38.0; // 기준점 위도(degree)\r\n        double XO = 43; // 기준점 X좌표(GRID)\r\n        double YO = 136; // 기1준점 Y좌표(GRID)\r\n\r\n        //\r\n        // LCC DFS 좌표변환 ( code : \"TO_GRID\"(위경도->좌표, lat_X:위도,  lng_Y:경도), \"TO_GPS\"(좌표->위경도,  lat_X:x, lng_Y:y) )\r\n        //\r\n\r\n\r\n        double DEGRAD = Math.PI / 180.0;\r\n        double RADDEG = 180.0 / Math.PI;\r\n\r\n        double re = RE / GRID;\r\n        double slat1 = SLAT1 * DEGRAD;\r\n        double slat2 = SLAT2 * DEGRAD;\r\n        double olon = OLON * DEGRAD;\r\n        double olat = OLAT * DEGRAD;\r\n\r\n        double sn = Math.tan(Math.PI * 0.25 + slat2 * 0.5) / Math.tan(Math.PI * 0.25 + slat1 * 0.5);\r\n        sn = Math.log(Math.cos(slat1) / Math.cos(slat2)) / Math.log(sn);\r\n        double sf = Math.tan(Math.PI * 0.25 + slat1 * 0.5);\r\n        sf = Math.pow(sf, sn) * Math.cos(slat1) / sn;\r\n        double ro = Math.tan(Math.PI * 0.25 + olat * 0.5);\r\n        ro = re * sf / Math.pow(ro, sn);\r\n        LatXLngY rs = new LatXLngY();\r\n\r\n        if (mode == TO_GRID) {\r\n            rs.lat = lat_X;\r\n            rs.lng = lng_Y;\r\n            double ra = Math.tan(Math.PI * 0.25 + (lat_X) * DEGRAD * 0.5);\r\n            ra = re * sf / Math.pow(ra, sn);\r\n            double theta = lng_Y * DEGRAD - olon;\r\n            if (theta > Math.PI) theta -= 2.0 * Math.PI;\r\n            if (theta < -Math.PI) theta += 2.0 * Math.PI;\r\n            theta *= sn;\r\n            rs.x = Math.floor(ra * Math.sin(theta) + XO + 0.5);\r\n            rs.y = Math.floor(ro - ra * Math.cos(theta) + YO + 0.5);\r\n        } else {\r\n            rs.x = lat_X;\r\n            rs.y = lng_Y;\r\n            double xn = lat_X - XO;\r\n            double yn = ro - lng_Y + YO;\r\n            double ra = Math.sqrt(xn * xn + yn * yn);\r\n            if (sn < 0.0) {\r\n                ra = -ra;\r\n            }\r\n            double alat = Math.pow((re * sf / ra), (1.0 / sn));\r\n            alat = 2.0 * Math.atan(alat) - Math.PI * 0.5;\r\n\r\n            double theta = 0.0;\r\n            if (Math.abs(xn) <= 0.0) {\r\n                theta = 0.0;\r\n            } else {\r\n                if (Math.abs(yn) <= 0.0) {\r\n                    theta = Math.PI * 0.5;\r\n                    if (xn < 0.0) {\r\n                        theta = -theta;\r\n                    }\r\n                } else theta = Math.atan2(xn, yn);\r\n            }\r\n            double alon = theta / sn + olon;\r\n            rs.lat = alat * RADDEG;\r\n            rs.lng = alon * RADDEG;\r\n        }\r\n        return rs;\r\n    }\r\n\r\n    class LatXLngY {\r\n        public double lat;\r\n        public double lng;\r\n\r\n        public double x;\r\n        public double y;\r\n\r\n    }\r\n\r\n    static class SetParameter {\r\n\r\n        static String setTime(Date today) {\r\n            String base_time;\r\n            SimpleDateFormat time = new SimpleDateFormat(\"HH\");\r\n\r\n            int nowTime = Integer.parseInt(time.format(today));\r\n\r\n            Log.d(TAG, \"Time : \" + time.format(today));\r\n\r\n            // Base_time : 0200, 0500, 0800, 1100, 1400, 1700, 2000, 2300\r\n            if (nowTime >= 2 && nowTime < 5) base_time = \"0200\";\r\n            else if (nowTime >= 5 && nowTime < 8) base_time = \"0500\";\r\n            else if (nowTime >= 8 && nowTime < 11) base_time = \"0800\";\r\n            else if (nowTime >= 11 && nowTime < 14) base_time = \"1100\";\r\n            else if (nowTime >= 14 && nowTime < 17) base_time = \"1400\";\r\n            else if (nowTime >= 17 && nowTime < 20) base_time = \"1700\";\r\n            else if (nowTime >= 20 && nowTime < 23) base_time = \"2000\";\r\n            else base_time = \"2300\";\r\n\r\n            return base_time;\r\n        }\r\n\r\n        static String setDate(Date today) {\r\n            String base_date;\r\n            SimpleDateFormat date = new SimpleDateFormat(\"yyyyMMdd\");\r\n            SimpleDateFormat time = new SimpleDateFormat(\"HH\");\r\n            int nowTime = Integer.parseInt(time.format(today));\r\n\r\n            Date dDate = new Date();\r\n            dDate = new Date(dDate.getTime() + (1000 * 60 * 60 * 24 * -1));\r\n\r\n            if (nowTime == 0 || nowTime == 1 || nowTime == 2)\r\n                base_date = date.format(dDate);\r\n            else base_date = date.format(today);\r\n\r\n            return base_date;\r\n        }\r\n    }\r\n\r\n    void setBoardPost() {\r\n        String url = \"http://weather.eba-eqpgap7p.ap-northeast-2.elasticbeanstalk.com/recent-post-5/\";\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(HomeFragment.this.getActivity());\r\n\r\n        JsonObjectRequest jsonArrayRequest = new JsonObjectRequest(Request.Method.GET,\r\n                url, null,\r\n                new Response.Listener<JSONObject>() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        Log.d(TAG, \"Success Set Post : \" + response.toString());\r\n                        try {\r\n                            JSONArray results = (JSONArray) response.get(\"results\");\r\n\r\n                            ArrayList<JSONObject> result = new ArrayList<>();\r\n                            ArrayList<String> setTitle = new ArrayList<>();\r\n                            ArrayList<String> setTime = new ArrayList<>();\r\n\r\n                            for(int i = 0; i < 5; i++) result.add((JSONObject) results.get(i));\r\n                            for(int i = 0; i < 5; i++) setTitle.add(result.get(i).get(\"post_title\").toString());\r\n                            for (int i = 0; i < 5; i++) setTime.add(result.get(i).get(\"reg_dt\").toString());\r\n\r\n                            ArrayList<TextView> setTitletextViewArrayList = new ArrayList<>();\r\n                            setTitletextViewArrayList.add((TextView) getActivity().findViewById(R.id.title1));\r\n                            setTitletextViewArrayList.add((TextView) getActivity().findViewById(R.id.title2));\r\n                            setTitletextViewArrayList.add((TextView) getActivity().findViewById(R.id.title3));\r\n                            setTitletextViewArrayList.add((TextView) getActivity().findViewById(R.id.title4));\r\n                            setTitletextViewArrayList.add((TextView) getActivity().findViewById(R.id.title5));\r\n                            for (int i = 0; i < setTitletextViewArrayList.size(); i++) {\r\n                                setTitletextViewArrayList.get(i).setText(setTitle.get(i));\r\n                            }\r\n\r\n                            ArrayList<TextView> setTimeTextViewArrayList = new ArrayList<>();\r\n                            setTimeTextViewArrayList.add((TextView) getActivity().findViewById(R.id.time1));\r\n                            setTimeTextViewArrayList.add((TextView) getActivity().findViewById(R.id.time2));\r\n                            setTimeTextViewArrayList.add((TextView) getActivity().findViewById(R.id.time3));\r\n                            setTimeTextViewArrayList.add((TextView) getActivity().findViewById(R.id.time4));\r\n                            setTimeTextViewArrayList.add((TextView) getActivity().findViewById(R.id.time5));\r\n                            for (int i = 0; i < setTimeTextViewArrayList.size(); i++) {\r\n                                setTimeTextViewArrayList.get(i).setText(setTime.get(i));\r\n                            }\r\n\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n                },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        error.printStackTrace();\r\n                        Log.d(TAG, \"SET POST FAIL\");\r\n                    }\r\n                }\r\n        );\r\n        queue.add(jsonArrayRequest);\r\n    }\r\n\r\n    void setWeather(String url) {\r\n        RequestQueue queue = Volley.newRequestQueue(HomeFragment.this.getActivity());\r\n\r\n        JsonObjectRequest jsonArrayRequest = new JsonObjectRequest(Request.Method.GET,\r\n                url, null,\r\n                new Response.Listener<JSONObject>() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        Log.d(TAG, \"Success : \" + response.toString());\r\n                        try {\r\n                            TextView t = (TextView) getActivity().findViewById(R.id.weatherMeteorological);\r\n                            TextView t_max = (TextView) getActivity().findViewById(R.id.temp_highest);\r\n                            TextView t_min = (TextView) getActivity().findViewById(R.id.temp_min);\r\n\r\n                            JSONObject result = (JSONObject) response.get(\"response\");\r\n                            JSONObject body = (JSONObject) result.get(\"body\");\r\n                            JSONObject items = (JSONObject) body.get(\"items\");\r\n                            JSONArray item = (JSONArray) items.get(\"item\");\r\n\r\n                            Log.d(TAG, \"item : \" + item.get(4).toString());\r\n\r\n                            JSONObject t3h = (JSONObject) item.get(4);\r\n                            t.setText(t3h.get(\"fcstValue\").toString() + \"℃\");\r\n\r\n                            Log.d(TAG, \"t3h : \" + t3h.get(\"fcstValue\").toString());\r\n\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n                },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                    error.printStackTrace();\r\n                    Log.d(TAG, \"FAIL\");\r\n                    }\r\n                });\r\n\r\n        queue.add(jsonArrayRequest);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/weather/fragment/HomeFragment.java	(revision 5b8128aaa97e41699811f36bc2442f39a114ace7)
+++ app/src/main/java/com/example/weather/fragment/HomeFragment.java	(date 1606067863722)
@@ -305,7 +305,7 @@
             Date dDate = new Date();
             dDate = new Date(dDate.getTime() + (1000 * 60 * 60 * 24 * -1));
 
-            if (nowTime == 0 || nowTime == 1 || nowTime == 2)
+            if (nowTime == 0 || nowTime == 1)
                 base_date = date.format(dDate);
             else base_date = date.format(today);
 
